{"ast":null,"code":"import { ComponentFactoryResolver } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\nimport { AlertComponent } from \"../shared/alert/alert.component\";\nimport { PlaceholderDirective } from \"../shared/placeholder/placeholder.directive\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../shared/alert/alert.component\";\nimport * as i6 from \"../shared/loading-spinner/loading-spinner.component\";\nimport * as i7 from \"../shared/placeholder/placeholder.directive\";\nfunction AuthComponent_ng_template_0_Template(rf, ctx) {}\nfunction AuthComponent_app_alert_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-alert\", 7);\n    i0.ɵɵlistener(\"close\", function AuthComponent_app_alert_3_Template_app_alert_close_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onHandleError());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"message\", ctx_r1.error);\n  }\n}\nfunction AuthComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_form_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 9, 0);\n    i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_form_5_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const authForm_r4 = i0.ɵɵreference(1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit(authForm_r4));\n    });\n    i0.ɵɵelementStart(2, \"div\", 10)(3, \"label\", 11);\n    i0.ɵɵtext(4, \"E-Mail\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 10)(7, \"label\", 13);\n    i0.ɵɵtext(8, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\")(11, \"button\", 15);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \" | \");\n    i0.ɵɵelementStart(14, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function AuthComponent_form_5_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSwitchMode());\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const authForm_r4 = i0.ɵɵreference(1);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"disabled\", !authForm_r4.valid);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.isLoginMode ? \"Login\" : \"Sign Up\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Switch to \", ctx_r1.isLoginMode ? \"Sign Up\" : \"Login\", \" \");\n  }\n}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(authService, router, route, componentFactoryResolver) {\n      this.authService = authService;\n      this.router = router;\n      this.route = route;\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.isLoginMode = true;\n      this.isLoading = false;\n      this.error = null;\n    }\n    ngOnInit() {\n      this.route.queryParams.subscribe(params => {\n        if (params[\"emailNotVerified\"]) {\n          this.error = \"Please verify your email before logging in.\";\n          this.showErrorAlert(this.error);\n        }\n      });\n    }\n    onSwitchMode() {\n      this.isLoginMode = !this.isLoginMode;\n    }\n    onSubmit(form) {\n      if (!form.valid) {\n        return;\n      }\n      const email = form.value.email;\n      const password = form.value.password;\n      let authObs;\n      this.isLoading = true;\n      if (this.isLoginMode) {\n        authObs = this.authService.login(email, password);\n      } else {\n        authObs = this.authService.signup(email, password);\n      }\n      authObs.subscribe(resData => {\n        console.log(resData);\n        this.isLoading = false;\n        this.authService.checkEmailVerified().subscribe(emailVerified => {\n          if (emailVerified) {\n            this.router.navigate([\"/recipes\"]);\n          } else {\n            this.router.navigate([\"/verify-email\"], {\n              queryParams: {\n                emailNotVerified: true\n              }\n            });\n          }\n        }, error => {\n          console.log(error);\n          this.error = \"An error occurred while checking email verification status.\";\n          this.showErrorAlert(this.error);\n        });\n      }, errorMessage => {\n        console.log(errorMessage);\n        this.error = errorMessage;\n        this.showErrorAlert(errorMessage);\n        this.isLoading = false;\n      });\n      form.reset();\n    }\n    onHandleError() {\n      this.error = null;\n    }\n    ngOnDestroy() {\n      if (this.closeSub) {\n        this.closeSub.unsubscribe();\n      }\n    }\n    showErrorAlert(message) {\n      const alertCmpFactory = this.componentFactoryResolver.resolveComponentFactory(AlertComponent);\n      const hostViewContainerRef = this.alertHost.viewContainerRef;\n      hostViewContainerRef.clear();\n      const componentRef = hostViewContainerRef.createComponent(alertCmpFactory);\n      componentRef.instance.message = message;\n      this.closeSub = componentRef.instance.close.subscribe(() => {\n        this.closeSub.unsubscribe();\n        hostViewContainerRef.clear();\n      });\n    }\n    static #_ = this.ɵfac = function AuthComponent_Factory(ɵt) {\n      return new (ɵt || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      viewQuery: function AuthComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(PlaceholderDirective, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.alertHost = _t.first);\n        }\n      },\n      decls: 6,\n      vars: 3,\n      consts: [[\"authForm\", \"ngForm\"], [\"appPlaceholder\", \"\"], [1, \"row\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [3, \"message\", \"close\", 4, \"ngIf\"], [\"style\", \"text-align: center\", 4, \"ngIf\"], [3, \"ngSubmit\", 4, \"ngIf\"], [3, \"close\", \"message\"], [2, \"text-align\", \"center\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AuthComponent_ng_template_0_Template, 0, 0, \"ng-template\", 1);\n          i0.ɵɵelementStart(1, \"div\", 2)(2, \"div\", 3);\n          i0.ɵɵtemplate(3, AuthComponent_app_alert_3_Template, 1, 1, \"app-alert\", 4)(4, AuthComponent_div_4_Template, 2, 0, \"div\", 5)(5, AuthComponent_form_5_Template, 16, 3, \"form\", 6);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        }\n      },\n      dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.EmailValidator, i4.NgModel, i4.NgForm, i5.AlertComponent, i6.LoadingSpinnerComponent, i7.PlaceholderDirective],\n      encapsulation: 2\n    });\n  }\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}